from odoo import models, fields, api

class HangSanXuat(models.Model):
    _name = "hang_san_xuat"
    _description = "H√£ng S·∫£n Xu·∫•t"

    # Quan h·ªá v·ªõi b·∫£ng ph∆∞∆°ng ti·ªán
    phuong_tien_ids = fields.One2many('phuong_tien', 'manufacturer_id', string='üöó Danh S√°ch Ph∆∞∆°ng Ti·ªán')

    # C√°c tr∆∞·ªùng th√¥ng tin v·ªÅ h√£ng s·∫£n xu·∫•t
    name = fields.Char(string="T√™n h√£ng s·∫£n xu·∫•t", required=True)
    country = fields.Char(string="Qu·ªëc gia")
    logo = fields.Binary(string="Logo")
    description = fields.Text(string="M√¥ t·∫£")

    @api.model
    def create(self, vals):
        """ T·∫°o b·∫£n ghi h√£ng s·∫£n xu·∫•t m·ªõi v√† ghi l·∫°i thao t√°c v√†o l·ªãch s·ª≠ """
        new_record = super(HangSanXuat, self).create(vals)

        # Ghi l·∫°i thao t√°c v√†o l·ªãch s·ª≠
        self.env['lich_su_thao_tac'].create({
            'model_name': 'hang_san_xuat',
            'record_id': new_record.id,
            'action_type': 'create',
            'action_details': f"Th√™m h√£ng s·∫£n xu·∫•t m·ªõi: {new_record.name}",
            'user_id': self.env.user.id,
            'action_date': fields.Datetime.now(),
        })

        return new_record

    def write(self, vals):
        """ Ghi l·∫°i thao t√°c s·ª≠a h√£ng s·∫£n xu·∫•t v√†o l·ªãch s·ª≠ """
        result = super(HangSanXuat, self).write(vals)

        for record in self:
            self.env['lich_su_thao_tac'].create({
                'model_name': 'hang_san_xuat',
                'record_id': record.id,
                'action_type': 'update',
                'action_details': f"C·∫≠p nh·∫≠t h√£ng s·∫£n xu·∫•t: {record.name}",
                'user_id': self.env.user.id,
                'action_date': fields.Datetime.now(),
            })

        return result

    def unlink(self):
        """ Ghi l·∫°i thao t√°c x√≥a h√£ng s·∫£n xu·∫•t v√†o l·ªãch s·ª≠ """
        for record in self:
            self.env['lich_su_thao_tac'].create({
                'model_name': 'hang_san_xuat',
                'record_id': record.id,
                'action_type': 'delete',
                'action_details': f"X√≥a h√£ng s·∫£n xu·∫•t: {record.name}",
                'user_id': self.env.user.id,
                'action_date': fields.Datetime.now(),
            })

        return super(HangSanXuat, self).unlink()
