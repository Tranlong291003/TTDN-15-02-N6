from odoo import models, fields, api

class BaoCaoTongHop(models.Model):
    _name = 'bao_cao.tong_hop'
    _description = 'üìä B√°o C√°o T·ªïng H·ª£p'
    _auto = False  # Kh√¥ng t·∫°o b·∫£ng trong database, ch·ªâ d√πng cho b√°o c√°o

    total_rentals = fields.Integer(string="üìÖ T·ªïng S·ªë ƒê∆°n Thu√™ Xe")
    total_revenue = fields.Float(string="üíµ T·ªïng Doanh Thu")
    total_vehicles = fields.Integer(string="üöó T·ªïng S·ªë Xe")
    available_vehicles = fields.Integer(string="‚úÖ Xe C√≥ S·∫µn")
    rented_vehicles = fields.Integer(string="üöó Xe ƒêang Thu√™")
    maintenance_vehicles = fields.Integer(string="üõ†Ô∏è Xe B·∫£o Tr√¨")
    broken_vehicles = fields.Integer(string="‚ö†Ô∏è Xe H·ªèng H√≥c")
    total_drivers = fields.Integer(string="üë®‚Äç‚úàÔ∏è T·ªïng S·ªë T√†i X·∫ø")

    chart_pie_vehicles = fields.Char(string="Chart Pie")
    chart_bar_types = fields.Char(string="Chart Bar")

    @api.model
    def init(self):
        # X√≥a b·∫£ng view n·∫øu ƒë√£ t·ªìn t·∫°i
        self.env.cr.execute("DROP VIEW IF EXISTS bao_cao_tong_hop")

        # T·∫°o view SQL ƒë·ªÉ t·ªïng h·ª£p d·ªØ li·ªáu b√°o c√°o
        self.env.cr.execute("""
            CREATE OR REPLACE VIEW bao_cao_tong_hop AS (
                SELECT
                    1 AS id,  -- B√°o c√°o t·ªïng h·ª£p ch·ªâ c√≥ m·ªôt d√≤ng
                    (SELECT COUNT(*) FROM thue_xe WHERE status != 'cancelled') AS total_rentals,
                    (SELECT SUM(total_price) FROM thue_xe WHERE status IN ('confirmed', 'completed')) AS total_revenue,
                    (SELECT COUNT(*) FROM phuong_tien) AS total_vehicles,
                    (SELECT COUNT(*) FROM phuong_tien WHERE status = 'available') AS available_vehicles,
                    (SELECT COUNT(*) FROM phuong_tien WHERE status = 'rented') AS rented_vehicles,
                    (SELECT COUNT(*) FROM phuong_tien WHERE status = 'maintenance') AS maintenance_vehicles,
                    (SELECT COUNT(*) FROM phuong_tien WHERE status = 'broken') AS broken_vehicles,
                    (SELECT COUNT(*) FROM tai_xe) AS total_drivers,
                    '{}' AS chart_pie_vehicles,  -- Placeholder for pie chart data
                    '{}' AS chart_bar_types  -- Placeholder for bar chart data
            )
        """)
        # C·∫≠p nh·∫≠t c√°c bi·ªÉu ƒë·ªì sau khi kh·ªüi t·∫°o d·ªØ li·ªáu
        self.update_charts()

    def update_charts(self):
        """ Update pie and bar chart data with dynamic values. """
        pie_chart_data = {
            'available': self.available_vehicles,
            'rented': self.rented_vehicles,
            'maintenance': self.maintenance_vehicles,
            'broken': self.broken_vehicles,
        }
        bar_chart_data = {
            'Type 1': self.total_vehicles,
            'Type 2': self.total_drivers,
        }

        # Chuy·ªÉn d·ªØ li·ªáu th√†nh chu·ªói JSON
        self.chart_pie_vehicles = str(pie_chart_data)
        self.chart_bar_types = str(bar_chart_data)
